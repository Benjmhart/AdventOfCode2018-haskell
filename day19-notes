ip = 2           a = 1          a = 1
0  addi 2 16 2  -p += 16     START: GOTO L1
1  seti 1 1 1    b = 1          L3: b = 1
2  seti 1 4 3    c = 1          L7: c = 1
3  mulr 1 3 5    e = b * c          (b*c)
4  eqrr 5 4 5    e = d == e         IF d == (b*c)
5  addr 5 2 2   -p = p + e          THEN GOTO L4
6  addi 2 1 2   -p = p + b          ELSE GOTO L5
7  addr 1 0 0    a = b + a      L4: a += b
8  addi 3 1 3    c = c + 1      L5: c ++
9  gtrr 3 4 5    e = c > d          IF (c > d)
10 addr 2 5 2   -p = p + e          THEN GOTO L6 
11 seti 2 4 2   -p = 2              ELSE GOTO L7
12 addi 1 1 1    b ++           L6: b++
13 gtrr 1 4 5    e = b > d          IF (b > d)
14 addr 5 2 2   -p = p + e          THEN GOTO L8
15 seti 1 0 2   -p = 1              ELSE goto L7
16 mulr 2 2 2   -p = p * p      L8: RETURN
17 addi 4 2 4    d = d + 2      L1: d = 2
18 mulr 4 4 4    d = d * d          d = 2^2
19 mulr 2 4 4    d = p * d          d = 2^2 * 19 
20 muli 4 11 4   d = d * 11         d = 2^2 * 19 * 11 = 836
21 addi 5 1 5    e ++               e = 1
22 mulr 5 2 5    e = e*p            e = 1 * 22
23 addi 5 17 5   e = e + 17         e = 22 + 17 = 39 
24 addr 4 5 4    d = d + e          d = 836 + 39 = 875
25 addr 2 0 2   -p = p + a          if (a == 1) GOTO L2
26 seti 0 9 2   -p = 0              GOTO L3
27 setr 2 3 5    e = p + c      L2: e = 27 + 0
28 mulr 5 2 5    e = p * e          e = 28 * e (756) 
29 addr 2 5 5    e = p + e          e = 29 + e (785)
30 mulr 2 5 5    e = p * e          e = 30 * e (23550)
31 muli 5 14 5   e = e * 14         e = 14 * e (329700)
32 mulr 5 2 5    e = e * p          e = 32 * e (10550400)
33 addr 4 5 4    d = d + e          d = d + e  (10551275)
34 seti 0 9 0    a = 0              a = 0
35 seti 0 6 2   -p = 0              GOTO L3


---
let a = 0
let d = 10551275
for (let b=1; b<=d, b++) {
  for (let c = 1; c <=d; c++){
    if((c * d) === b) {
      a += b
    }
  }
}

a //?

current values [0,0,1,0,10551275,10550400]